[{"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\routes\\App.tsx":"1","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\routes\\Authenticated.tsx":"2","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\hooks\\useFetchUser.ts":"3","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Loading\\index.tsx":"4","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Container\\index.ts":"5","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\InputField\\styles.ts":"6","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Logo\\index.tsx":"7","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\modules\\Register\\index.tsx":"8","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\theme\\global-style.ts":"9","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\SEO\\index.tsx":"10","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\modules\\Login\\index.tsx":"11","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\actions.ts":"12","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Button\\index.ts":"13","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\config\\index.ts":"14","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Card\\index.ts":"15","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\home\\modules\\Home\\index.tsx":"16","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Header\\index.tsx":"17","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\home\\components\\shared-style.ts":"18","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\InputField\\index.tsx":"19","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Typography\\index.tsx":"20","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\search\\modules\\Search\\index.tsx":"21","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\mask.tsx":"22","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\handsanitizer.tsx":"23","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\helpers\\history.ts":"24","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\reducers\\UserReducer.ts":"25","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\helpers\\setAuthToken.ts":"26","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\helpers\\storage.ts":"27","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Mask.tsx":"28","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\hooks\\useUser.ts":"29","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Wine.tsx":"30","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\theme\\theme.ts":"31","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Safety.tsx":"32","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\CovidRates.tsx":"33","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Network.tsx":"34","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Footer\\styles.ts":"35","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Footer\\index.tsx":"36","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Singing.tsx":"37","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\SmallSize.tsx":"38","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\LargeSize.tsx":"39","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\index.tsx":"40","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\providers\\UserProvider.tsx":"41","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Dancing.tsx":"42","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\components\\shared-style.ts":"43","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Header\\styles.ts":"44","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\HandSanitizer.tsx":"45","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Talking.tsx":"46","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\venue\\components\\charts\\index.tsx":"47","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\data\\index.ts":"48","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\routes\\Unauthenticated.tsx":"49","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\venue\\modules\\venue\\index.js":"50","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\dashboard\\modules\\Dashboard\\index.tsx":"51","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\MediumSize.tsx":"52","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\search\\providers\\VenueProvider.jsx":"53","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\ErrorField\\index.ts":"54","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Loading\\styles.ts":"55"},{"size":1158,"mtime":1618494289608,"results":"56","hashOfConfig":"57"},{"size":526,"mtime":1616769829762,"results":"58","hashOfConfig":"57"},{"size":1189,"mtime":1616769829749,"results":"59","hashOfConfig":"57"},{"size":230,"mtime":1616769829770,"results":"60","hashOfConfig":"57"},{"size":207,"mtime":1616769829765,"results":"61","hashOfConfig":"57"},{"size":806,"mtime":1616769829769,"results":"62","hashOfConfig":"57"},{"size":3917,"mtime":1617295919916,"results":"63","hashOfConfig":"57"},{"size":23343,"mtime":1618845303703,"results":"64","hashOfConfig":"57"},{"size":324,"mtime":1618491642294,"results":"65","hashOfConfig":"57"},{"size":1660,"mtime":1617542379293,"results":"66","hashOfConfig":"57"},{"size":3469,"mtime":1617545273010,"results":"67","hashOfConfig":"57"},{"size":3206,"mtime":1618152576722,"results":"68","hashOfConfig":"57"},{"size":2023,"mtime":1617544364333,"results":"69","hashOfConfig":"57"},{"size":770,"mtime":1617489598367,"results":"70","hashOfConfig":"57"},{"size":150,"mtime":1616769829764,"results":"71","hashOfConfig":"57"},{"size":3725,"mtime":1618047194339,"results":"72","hashOfConfig":"57"},{"size":1304,"mtime":1617541289370,"results":"73","hashOfConfig":"57"},{"size":954,"mtime":1617013909056,"results":"74","hashOfConfig":"57"},{"size":352,"mtime":1617542394143,"results":"75","hashOfConfig":"57"},{"size":642,"mtime":1617543716677,"results":"76","hashOfConfig":"57"},{"size":4145,"mtime":1618846640705,"results":"77","hashOfConfig":"57"},{"size":3939,"mtime":1617793560552,"results":"78","hashOfConfig":"57"},{"size":4859,"mtime":1617793549888,"results":"79","hashOfConfig":"57"},{"size":116,"mtime":1616769829757,"results":"80","hashOfConfig":"57"},{"size":801,"mtime":1616769829754,"results":"81","hashOfConfig":"57"},{"size":278,"mtime":1616769829758,"results":"82","hashOfConfig":"57"},{"size":359,"mtime":1616769829759,"results":"83","hashOfConfig":"57"},{"size":3937,"mtime":1618493896928,"results":"84","hashOfConfig":"57"},{"size":329,"mtime":1616769829750,"results":"85","hashOfConfig":"57"},{"size":3570,"mtime":1617794877390,"results":"86","hashOfConfig":"57"},{"size":362,"mtime":1616769829780,"results":"87","hashOfConfig":"57"},{"size":1500,"mtime":1617885303913,"results":"88","hashOfConfig":"57"},{"size":2042,"mtime":1617886966136,"results":"89","hashOfConfig":"57"},{"size":10314,"mtime":1617887166741,"results":"90","hashOfConfig":"57"},{"size":240,"mtime":1617887572988,"results":"91","hashOfConfig":"57"},{"size":350,"mtime":1617887718341,"results":"92","hashOfConfig":"57"},{"size":19286,"mtime":1617965380442,"results":"93","hashOfConfig":"57"},{"size":1919,"mtime":1617968719574,"results":"94","hashOfConfig":"57"},{"size":1917,"mtime":1617968604290,"results":"95","hashOfConfig":"57"},{"size":334,"mtime":1616770304878,"results":"96","hashOfConfig":"57"},{"size":1105,"mtime":1617027490022,"results":"97","hashOfConfig":"57"},{"size":3686,"mtime":1617965573261,"results":"98","hashOfConfig":"57"},{"size":954,"mtime":1617013909056,"results":"99","hashOfConfig":"57"},{"size":644,"mtime":1616769829768,"results":"100","hashOfConfig":"57"},{"size":4859,"mtime":1617793549888,"results":"101","hashOfConfig":"57"},{"size":3631,"mtime":1617965246679,"results":"102","hashOfConfig":"57"},{"size":3224,"mtime":1618151222897,"results":"103","hashOfConfig":"57"},{"size":1983,"mtime":1618313200050,"results":"104","hashOfConfig":"57"},{"size":1009,"mtime":1618493533275,"results":"105","hashOfConfig":"57"},{"size":4047,"mtime":1618495914673,"results":"106","hashOfConfig":"57"},{"size":267,"mtime":1616769829755,"results":"107","hashOfConfig":"57"},{"size":1922,"mtime":1617968671247,"results":"108","hashOfConfig":"57"},{"size":425,"mtime":1618495379592,"results":"109","hashOfConfig":"57"},{"size":132,"mtime":1616769829766,"results":"110","hashOfConfig":"57"},{"size":189,"mtime":1616769829770,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"izgalz",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\routes\\App.tsx",[],["237","238"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\routes\\Authenticated.tsx",[],["239","240"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\hooks\\useFetchUser.ts",[],["241","242"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Loading\\index.tsx",[],["243","244"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Container\\index.ts",[],["245","246"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\InputField\\styles.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Logo\\index.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\modules\\Register\\index.tsx",["247"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Grid, Step, StepLabel, Stepper } from '@material-ui/core'\r\nimport { API_URL } from 'config'\r\n// import Recaptcha from 'react-google-recaptcha'\r\nimport {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage,\r\n  FormikConfig,\r\n  FormikValues,\r\n} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport Spinner from 'react-spinkit'\r\nimport Container from 'ui/components/Container'\r\nimport InputField from 'ui/components/InputField'\r\nimport ErrorField from 'ui/components/ErrorField'\r\nimport Button from 'ui/components/Button'\r\nimport Card from 'ui/components/Card'\r\nimport SEO from 'ui/components/SEO'\r\n\r\nimport useDispatchUser from 'features/auth/hooks/useDispatchUser'\r\nimport { register } from 'features/auth/actions'\r\nimport { LANDING_PAGE_URL } from 'config'\r\nimport {\r\n  Wrapper,\r\n  Center,\r\n  Title,\r\n  CardWrapper,\r\n} from 'features/auth/components/shared-style'\r\n// const sleep = (time: number) => new Promise((acc) => setTimeout(acc, time))\r\n\r\nexport default function Register() {\r\n  const dispatchUser = useDispatchUser()\r\n  const [mechanicalVentilation, setMechanicalVentilation] = useState('')\r\n  const handleChange = (e: any) => {\r\n    setMechanicalVentilation(e.target.value)\r\n  }\r\n  return (\r\n    <Container>\r\n      <SEO url=\"/register\" title=\"Register\" />\r\n      <Wrapper>\r\n        <FormikStepper\r\n          // enableReinitialize\r\n          initialValues={{\r\n            venueName: '',\r\n            description: '',\r\n            venueType: '',\r\n\r\n            venueCapacity: '',\r\n            capacityLimit: '',\r\n            indoorCapacity: '',\r\n            outdoorCapacity: '',\r\n            timeSpentAtVenue: '',\r\n\r\n            naturalVentilation: '',\r\n            mechanicalVentilation: '',\r\n            airCirculation: 'No',\r\n\r\n            tables: '',\r\n            tablesSeperation: '',\r\n            plexiglass: '',\r\n\r\n            handSanitizer: '',\r\n            disinfection: '',\r\n            physicalMenus: '',\r\n            masks: '',\r\n\r\n            talking: '',\r\n            singing: '',\r\n            dancing: '',\r\n            alcoholConsumption: '',\r\n\r\n            fullName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n\r\n            fullAddress: '',\r\n            postcode: '',\r\n            city: '',\r\n\r\n            password: '',\r\n            confirmPassword: '',\r\n          }}\r\n          // onSubmit={async (values) => {\r\n          //   await sleep(3000)\r\n          //   console.log('values', values)\r\n          // }}\r\n          onSubmit={async (\r\n            {\r\n              venueName,\r\n              description,\r\n              venueType,\r\n\r\n              venueCapacity,\r\n              capacityLimit,\r\n              indoorCapacity,\r\n              outdoorCapacity,\r\n              timeSpentAtVenue,\r\n\r\n              naturalVentilation,\r\n              mechanicalVentilation,\r\n              airCirculation,\r\n\r\n              tables,\r\n              tablesSeperation,\r\n              plexiglass,\r\n\r\n              handSanitizer,\r\n              disinfection,\r\n              physicalMenus,\r\n              masks,\r\n\r\n              talking,\r\n              singing,\r\n              dancing,\r\n              alcoholConsumption,\r\n\r\n              fullName,\r\n              email,\r\n              phoneNumber,\r\n\r\n              fullAddress,\r\n              postcode,\r\n              city,\r\n\r\n              password,\r\n              confirmPassword,\r\n            },\r\n\r\n            { setSubmitting, setFieldError }\r\n          ) => {\r\n            try {\r\n              register({\r\n                dispatchUser,\r\n                setFieldError,\r\n                setSubmitting,\r\n                values: {\r\n                  venueName,\r\n                  description,\r\n                  venueType,\r\n\r\n                  venueCapacity,\r\n                  capacityLimit,\r\n                  indoorCapacity,\r\n                  outdoorCapacity,\r\n                  timeSpentAtVenue,\r\n\r\n                  naturalVentilation,\r\n                  mechanicalVentilation,\r\n                  airCirculation,\r\n\r\n                  tables,\r\n                  tablesSeperation,\r\n                  plexiglass,\r\n\r\n                  handSanitizer,\r\n                  disinfection,\r\n                  physicalMenus,\r\n                  masks,\r\n\r\n                  talking,\r\n                  singing,\r\n                  dancing,\r\n                  alcoholConsumption,\r\n\r\n                  fullName,\r\n                  email,\r\n                  phoneNumber,\r\n\r\n                  fullAddress,\r\n                  postcode,\r\n                  city,\r\n\r\n                  password,\r\n                  confirmPassword,\r\n                },\r\n              })\r\n            } catch (err) {\r\n              setSubmitting(false)\r\n            }\r\n          }}\r\n        >\r\n          <FormikStep\r\n            label=\"Business Information\"\r\n            validationSchema={Yup.object().shape({\r\n              venueName: Yup.string().required(),\r\n              description: Yup.string().required(),\r\n              venueType: Yup.string().required(),\r\n            })}\r\n          >\r\n            <InputField label=\"Venue Name\">\r\n              <Field type=\"text\" name=\"venueName\" placeholder=\"Venue Name\" />\r\n              <ErrorMessage component={ErrorField} name=\"venueName\" />\r\n            </InputField>\r\n            <InputField label=\"Description\">\r\n              <Field\r\n                type=\"text\"\r\n                name=\"description\"\r\n                placeholder=\"Bried description\"\r\n              />\r\n              <ErrorMessage component={ErrorField} name=\"description\" />\r\n            </InputField>\r\n            <InputField label=\"Venue Type\">\r\n              <Field\r\n                type=\"text\"\r\n                name=\"venueType\"\r\n                placeholder=\"What type of venue are you?\"\r\n              />\r\n              <ErrorMessage component={ErrorField} name=\"venueType\" />\r\n            </InputField>\r\n          </FormikStep>\r\n          <FormikStep\r\n            label=\"Capacity\"\r\n            validationSchema={Yup.object().shape({\r\n              venueCapacity: Yup.number().required(),\r\n              capacityLimit: Yup.number().required(),\r\n              indoorCapacity: Yup.number().required(),\r\n              outdoorCapacity: Yup.number().required(),\r\n            })}\r\n          >\r\n            <InputField label=\"Venue Capacity\">\r\n              <Field\r\n                type=\"number\"\r\n                name=\"venueCapacity\"\r\n                placeholder=\"What is the capacity of your venue?\"\r\n              />\r\n              <ErrorMessage component={ErrorField} name=\"venueCapacity\" />\r\n            </InputField>\r\n            <InputField label=\"Capacity Limit\">\r\n              <Field\r\n                type=\"number\"\r\n                name=\"capacityLimit\"\r\n                placeholder=\"What is the COVID-19 capacity limit(%)?\"\r\n              />\r\n              <ErrorMessage component={ErrorField} name=\"capacityLimit\" />\r\n            </InputField>\r\n            <InputField label=\"Indoor Capacity\">\r\n              <Field\r\n                type=\"number\"\r\n                name=\"indoorCapacity\"\r\n                placeholder=\"What is your indoor capacity?\"\r\n              />\r\n              <ErrorMessage component={ErrorField} name=\"indoorCapacity\" />\r\n            </InputField>\r\n            <InputField label=\"Outdoor Capacity\">\r\n              <Field\r\n                type=\"number\"\r\n                name=\"outdoorCapacity\"\r\n                placeholder=\"What is the outdoor capacity?\"\r\n              />\r\n              <ErrorMessage component={ErrorField} name=\"outdoorCapacity\" />\r\n            </InputField>\r\n            <InputField label=\"Time spent at venue in minutes\">\r\n              <Field\r\n                type=\"number\"\r\n                name=\"timeSpentAtVenue\"\r\n                placeholder=\"How long do people usually spend at your venue?\"\r\n              />\r\n              <ErrorMessage component={ErrorField} name=\"timeSpentAtVenue\" />\r\n            </InputField>\r\n          </FormikStep>\r\n          <FormikStep\r\n            label=\"Ventilation\"\r\n            validationSchema={Yup.object().shape({\r\n              naturalVentilation: Yup.string().required(),\r\n              mechanicalVentilation: Yup.string().required(),\r\n              airCirculation: Yup.string().required(),\r\n            })}\r\n          >\r\n            <InputField label=\"Natural Ventilation\">\r\n              <Field as=\"select\" name=\"naturalVentilation\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"Do you have natural ventilation which provides fresh air? (windows / doors)?\"\r\n                />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"naturalVentilation\" />\r\n            </InputField>\r\n            <InputField label=\"Mechanical Ventilation\">\r\n              <Field\r\n                as=\"select\"\r\n                name=\"mechanicalVentilation\"\r\n                onClick={handleChange}\r\n              >\r\n                <option value=\"\" label=\"Do you use fans or AC?\" />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage\r\n                component={ErrorField}\r\n                name=\"mechanicalVentilation\"\r\n              />\r\n            </InputField>\r\n            {mechanicalVentilation === 'Yes' ? (\r\n              <InputField label=\"Air Circulation\">\r\n                <Field as=\"select\" name=\"airCirculation\" defaultValue=\"No\">\r\n                  <option\r\n                    value=\"\"\r\n                    label=\"If you have fans / AC, do they recirculate indoor air or source it from outside?\"\r\n                  />\r\n                  <option value=\"Yes\" label=\"Yes\" />\r\n                  <option value=\"No\" label=\"No\" />\r\n                </Field>\r\n                <ErrorMessage component={ErrorField} name=\"airCirculation\" />\r\n              </InputField>\r\n            ) : null}\r\n          </FormikStep>\r\n          <FormikStep\r\n            label=\"Social Distancing\"\r\n            validationSchema={Yup.object().shape({\r\n              tables: Yup.string().required(),\r\n              tablesSeperation: Yup.string().required(),\r\n              plexiglass: Yup.string().required(),\r\n            })}\r\n          >\r\n            <InputField label=\"Tables\">\r\n              <Field as=\"select\" name=\"tables\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"Do guests sit at tables at the venue?\"\r\n                />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"tables\" />\r\n            </InputField>\r\n            <InputField label=\"Tables Seperation\">\r\n              <Field as=\"select\" name=\"tablesSeperation\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"If yes, are the table seperated in a way which allows for social distancing?\"\r\n                />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"tablesSeperation\" />\r\n            </InputField>\r\n            <InputField label=\"Plexiglass\">\r\n              <Field as=\"select\" name=\"plexiglass\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"Do you have plexiglass at places where social distancing cannot be enforced (bar / cashier etc.)?\"\r\n                />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"plexiglass\" />\r\n            </InputField>\r\n          </FormikStep>\r\n          <FormikStep\r\n            label=\"Hygiene Measures\"\r\n            validationSchema={Yup.object().shape({\r\n              handSanitizer: Yup.string().required(),\r\n              disinfection: Yup.string().required(),\r\n              physicalMenus: Yup.string().required(),\r\n              masks: Yup.string().required(),\r\n            })}\r\n          >\r\n            <InputField label=\"Hand Sanitizer\">\r\n              <Field as=\"select\" name=\"handSanitizer\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"Do you provide guests with hand sanitizer?\"\r\n                />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"handSanitizer\" />\r\n            </InputField>\r\n            <InputField label=\"Disinfection\">\r\n              <Field as=\"select\" name=\"disinfection\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"Do you regularly disinfect tables and other surfaces guests interact with?\"\r\n                />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"disinfection\" />\r\n            </InputField>\r\n            <InputField label=\"Physical Menus\">\r\n              <Field as=\"select\" name=\"physicalMenus\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"Do you provide guests with physical menus which are shared with other guests?\"\r\n                />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"physical Menus\" />\r\n            </InputField>\r\n            <InputField label=\"Masks\">\r\n              <Field as=\"select\" name=\"masks\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"Are guests required to wear masks while at the venue?\"\r\n                />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n                <option value=\"NotAlways\" label=\"Not always\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"masks\" />\r\n            </InputField>\r\n          </FormikStep>\r\n          <FormikStep\r\n            label=\"Activities\"\r\n            validationSchema={Yup.object().shape({\r\n              talking: Yup.string().required(),\r\n              singing: Yup.string().required(),\r\n              dancing: Yup.string().required(),\r\n              alcoholConsumption: Yup.string().required(),\r\n            })}\r\n          >\r\n            <InputField label=\"Talking\">\r\n              <Field as=\"select\" name=\"talking\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"Are guests likely to engage in long conversations while at the venue?\"\r\n                />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"talking\" />\r\n            </InputField>\r\n            <InputField label=\"Singing\">\r\n              <Field as=\"select\" name=\"singing\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"Are guests likely to sing while at the venue?\"\r\n                />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"singing\" />\r\n            </InputField>\r\n            <InputField label=\"Dancing\">\r\n              <Field as=\"select\" name=\"dancing\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"Are guests likely to dance or engage in physical activity while at the venue?\"\r\n                />\r\n                <option value=\"Yes\" label=\"Yes\" />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"dancing\" />\r\n            </InputField>\r\n            <InputField label=\"Alcohol Consumption\">\r\n              <Field as=\"select\" name=\"alcoholConsumption\">\r\n                <option\r\n                  value=\"\"\r\n                  label=\"Do you sell or provide alcoholic beverages to the guests?\"\r\n                />\r\n                <option\r\n                  value=\"Yes alongside meals\"\r\n                  label=\"Yes, served alongside meals\"\r\n                />\r\n                <option\r\n                  value=\"Yes as primary function\"\r\n                  label=\"Yes, served as primary function (bar, nightclub)\"\r\n                />\r\n                <option value=\"No\" label=\"No\" />\r\n              </Field>\r\n              <ErrorMessage component={ErrorField} name=\"alcoholConsumption\" />\r\n            </InputField>\r\n          </FormikStep>\r\n          <FormikStep\r\n            label=\"Contact Details\"\r\n            validationSchema={Yup.object().shape({\r\n              fullName: Yup.string().required(),\r\n              email: Yup.string().email().required(),\r\n              phoneNumber: Yup.string().required(),\r\n            })}\r\n          >\r\n            <InputField label=\"Full Name\">\r\n              <Field type=\"text\" name=\"fullName\" placeholder=\"Full Name\" />\r\n              <ErrorMessage component={ErrorField} name=\"fullName\" />\r\n            </InputField>\r\n            <InputField label=\"Email\">\r\n              <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n              <ErrorMessage component={ErrorField} name=\"email\" />\r\n            </InputField>\r\n            <InputField label=\"Phone Number\">\r\n              <Field\r\n                type=\"text\"\r\n                name=\"phoneNumber\"\r\n                placeholder=\"Phone Number\"\r\n              />\r\n              <ErrorMessage component={ErrorField} name=\"phoneNumber\" />\r\n            </InputField>\r\n          </FormikStep>\r\n          <FormikStep\r\n            label=\"Address\"\r\n            validationSchema={Yup.object().shape({\r\n              fullAddress: Yup.string().required(),\r\n              postcode: Yup.string().required(),\r\n              city: Yup.string().required(),\r\n            })}\r\n          >\r\n            <InputField label=\"Full Address\">\r\n              <Field\r\n                type=\"text\"\r\n                name=\"fullAddress\"\r\n                placeholder=\"Full Address\"\r\n              />\r\n              <ErrorMessage component={ErrorField} name=\"fullAddress\" />\r\n            </InputField>\r\n            <InputField label=\"Postcode\">\r\n              <Field type=\"text\" name=\"postcode\" placeholder=\"Postcode\" />\r\n              <ErrorMessage component={ErrorField} name=\"postcode\" />\r\n            </InputField>\r\n            <InputField label=\"City\">\r\n              <Field type=\"text\" name=\"city\" placeholder=\"City\" />\r\n              <ErrorMessage component={ErrorField} name=\"city\" />\r\n            </InputField>\r\n          </FormikStep>\r\n          <FormikStep\r\n            label=\"Password\"\r\n            validationSchema={Yup.object().shape({\r\n              password: Yup.string().required(),\r\n              confirmPassword: Yup.string().when('password', {\r\n                is: (val) => (val && val.length > 0 ? true : false),\r\n                then: Yup.string().oneOf(\r\n                  [Yup.ref('password')],\r\n                  'Passwords do not match'\r\n                ),\r\n              }),\r\n            })}\r\n          >\r\n            <InputField label=\"Password\">\r\n              <Field type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n              <ErrorMessage component={ErrorField} name=\"password\" />\r\n            </InputField>\r\n            <InputField label=\"Confirm Password\">\r\n              <Field\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                placeholder=\"Confirm Password\"\r\n              />\r\n              <ErrorMessage component={ErrorField} name=\"confirmPassword\" />\r\n            </InputField>\r\n          </FormikStep>\r\n        </FormikStepper>\r\n      </Wrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport interface FormikStepProps\r\n  extends Pick<FormikConfig<FormikValues>, 'children' | 'validationSchema'> {\r\n  label: string\r\n}\r\n\r\nexport function FormikStep({ children }: FormikStepProps) {\r\n  return <>{children}</>\r\n}\r\n\r\nexport function FormikStepper({\r\n  children,\r\n  ...props\r\n}: FormikConfig<FormikValues>) {\r\n  const childrenArray = React.Children.toArray(\r\n    children\r\n  ) as React.ReactElement<FormikStepProps>[]\r\n  const [step, setStep] = useState(0)\r\n  const currentChild = childrenArray[step]\r\n  const [completed, setCompleted] = useState(false)\r\n\r\n  function isLastStep() {\r\n    return step === childrenArray.length - 1\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      {...props}\r\n      validationSchema={currentChild.props.validationSchema}\r\n      onSubmit={async (values, helpers) => {\r\n        if (isLastStep()) {\r\n          await props.onSubmit(values, helpers)\r\n          setCompleted(true)\r\n        } else {\r\n          setStep((s) => s + 1)\r\n          helpers.setTouched({})\r\n        }\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form autoComplete=\"off\">\r\n          <Title>Sign up</Title>\r\n          <CardWrapper as={Card}>\r\n            <Stepper alternativeLabel activeStep={step}>\r\n              {childrenArray.map((child, index) => (\r\n                <Step\r\n                  key={child.props.label}\r\n                  completed={step > index || completed}\r\n                >\r\n                  <StepLabel>{child.props.label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n\r\n            {currentChild}\r\n\r\n            <Grid container spacing={2} justify=\"center\">\r\n              {step > 0 ? (\r\n                <Grid item>\r\n                  <Button\r\n                    size=\"large\"\r\n                    variant=\"secondary\"\r\n                    disabled={isSubmitting}\r\n                    type=\"button\"\r\n                    onClick={() => setStep((s) => s - 1)}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </Grid>\r\n              ) : null}\r\n              <Grid item>\r\n                <Button\r\n                  size=\"large\"\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? (\r\n                    <Spinner name=\"circle\" color=\"white\" />\r\n                  ) : isLastStep() ? (\r\n                    'Submit'\r\n                  ) : (\r\n                    'Next'\r\n                  )}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Center>\r\n              <p>\r\n                Already have an account? <Link to=\"/\">Login</Link>\r\n              </p>\r\n            </Center>\r\n            {isLastStep() ? (\r\n              <Center>\r\n                <p>\r\n                  By signing up you agree to the{' '}\r\n                  <a href={`${LANDING_PAGE_URL}terms-of-use`}>Terms of Use</a>{' '}\r\n                  and the{' '}\r\n                  <a href={`${LANDING_PAGE_URL}privacy-policy`}>\r\n                    Privacy Policy\r\n                  </a>\r\n                </p>\r\n              </Center>\r\n            ) : null}\r\n          </CardWrapper>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\theme\\global-style.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\SEO\\index.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\modules\\Login\\index.tsx",[],["248","249"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\actions.ts",[],["250","251"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Button\\index.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\config\\index.ts",[],["252","253"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Card\\index.ts",[],["254","255"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\home\\modules\\Home\\index.tsx",["256"],"import React from 'react'\r\nimport Container from 'ui/components/Container'\r\nimport styled from 'styled-components'\r\nimport SEO from 'ui/components/SEO'\r\nimport Card from 'ui/components/Card'\r\nimport { CardWrapper } from 'features/home/components/shared-style'\r\nimport Typography from 'ui/components/Typography'\r\nimport Button from 'ui/components/Button'\r\nimport maps from 'assets/images/maps.png'\r\nimport { Link } from 'react-router-dom'\r\nimport Safety from 'assets/icons/Safety'\r\nimport CovidRates from 'assets/icons/CovidRates'\r\nimport Network from 'assets/icons/Network'\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n`\r\nconst ListItem = styled.div``\r\nconst FlexItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 1rem;\r\n  margin: 1rem;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  display: flex;\r\n  /* align-items: center; */\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`\r\nconst Circle = styled.div`\r\n  border: 1px solid #000;\r\n  border-radius: 100%;\r\n  padding: 1rem;\r\n  /* width: 24px; */\r\n  /* height: 24px; */\r\n`\r\n\r\nconst Grid = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n`\r\nexport default function Home() {\r\n  return (\r\n    <Container>\r\n      <SEO url=\"/\" title=\"Home\" />\r\n      <Grid>\r\n        <GridItem>\r\n          <ListItem>\r\n            <Typography as=\"p\" fontSize={42} align=\"left\">\r\n              COVID PULSE\r\n            </Typography>\r\n            <Typography as=\"p\" fontSize={18} align=\"left\">\r\n              Safely Return to Your Favorite Activities\r\n            </Typography>\r\n          </ListItem>\r\n          <ListItem>\r\n            <Link to=\"/search\">\r\n              <Button size=\"large\" variant=\"primary\">\r\n                Browser venues\r\n              </Button>\r\n            </Link>\r\n          </ListItem>\r\n        </GridItem>\r\n        <GridItem>\r\n          <img src={maps} alt=\"maps\" height={400} />\r\n        </GridItem>\r\n      </Grid>\r\n      <Typography as=\"p\" fontSize={42} align=\"center\">\r\n        Features\r\n      </Typography>\r\n      {/* <CardWrapper > */}\r\n      <Flex>\r\n        <FlexItem as={Card}>\r\n          <Circle>\r\n            <Safety />\r\n          </Circle>\r\n          <Typography as=\"h2\" fontSize={18} align=\"center\">\r\n            Understand the safety precautions present at the venue\r\n          </Typography>\r\n          <Typography as=\"p\" fontSize={14} align=\"center\" fontWeight={400}>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nam\r\n            voluptatum, consequuntur unde a vel veniam quaerat?\r\n          </Typography>\r\n        </FlexItem>\r\n\r\n        <FlexItem as={Card}>\r\n          <Circle>\r\n            <CovidRates />\r\n          </Circle>\r\n          <Typography as=\"h2\" fontSize={18} align=\"center\">\r\n            View Real-Time Covid rates at venue location\r\n          </Typography>\r\n          <Typography as=\"p\" fontSize={14} align=\"center\" fontWeight={400}>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nam\r\n            voluptatum, consequuntur unde a vel veniam quaerat?\r\n          </Typography>\r\n        </FlexItem>\r\n        <FlexItem as={Card}>\r\n          <Circle>\r\n            <Network />\r\n          </Circle>\r\n          <Typography as=\"h2\" fontSize={18} align=\"center\">\r\n            See how busy the venue is\r\n          </Typography>\r\n          <Typography as=\"p\" fontSize={14} align=\"center\" fontWeight={400}>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nam\r\n            voluptatum, consequuntur unde a vel veniam quaerat?\r\n          </Typography>\r\n        </FlexItem>\r\n      </Flex>\r\n    </Container>\r\n  )\r\n}\r\n",["257","258"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Header\\index.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\home\\components\\shared-style.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\InputField\\index.tsx",[],["259","260"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Typography\\index.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\search\\modules\\Search\\index.tsx",["261"],"import React, { useState, useEffect } from 'react'\r\nimport Container from 'ui/components/Container'\r\nimport styled from 'styled-components'\r\nimport SEO from 'ui/components/SEO'\r\nimport Card from 'ui/components/Card'\r\n// import { CardWrapper } from 'features/home/components/shared-style'\r\nimport Typography from 'ui/components/Typography'\r\n// import Button from 'ui/components/Button'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport items from 'data'\r\nimport InputField from 'ui/components/InputField'\r\nimport Mask from 'assets/icons/Mask'\r\nimport HandSanitizer from 'assets/icons/HandSanitizer'\r\nimport Wine from 'assets/icons/Wine'\r\nimport Talking from 'assets/icons/Talking'\r\nimport Singing from 'assets/icons/Singing'\r\nimport Dancing from 'assets/icons/Dancing'\r\nimport SmallSize from 'assets/icons/SmallSize'\r\nimport MediumSize from 'assets/icons/MediumSize'\r\nimport LargeSize from 'assets/icons/LargeSize'\r\nimport { VenueData } from 'ui/interfaces'\r\nimport { Link } from 'react-router-dom'\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  /* flex-grow: 4; */\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`\r\nconst CardItem = styled.div`\r\n  padding: 2rem;\r\n  margin: 1rem;\r\n  height: -webkit-fill-available;\r\n  justify-content: space-around;\r\n  display: flex;\r\n  height: 500px;\r\n  flex-direction: column;\r\n  cursor: pointer;\r\n`\r\nconst IconsList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 12px;\r\n  flex-wrap: wrap;\r\n`\r\nexport default function Search() {\r\n  const [venues, setVenues] = useState<VenueData[]>(items)\r\n  const [search, setSearch] = useState('')\r\n  const [filteredResults, setFilteredResults] = useState<VenueData[]>([])\r\n\r\n  useEffect(() => {\r\n    setFilteredResults(\r\n      venues.filter(\r\n        (venue) =>\r\n          venue.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          venue.location.toLowerCase().includes(search.toLowerCase())\r\n      )\r\n    )\r\n  }, [search, venues])\r\n\r\n  return (\r\n    <Container>\r\n      <SEO url=\"/\" title=\"Home\" />\r\n      <Typography as=\"h1\" fontSize={42} align=\"center\">\r\n        Search Page\r\n      </Typography>\r\n      <InputField label=\"Search for a venue\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"search\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          placeholder=\"search for venue by name or location\"\r\n        />\r\n      </InputField>\r\n      {/* <CardWrapper as={Card}> */}\r\n      <Flex>\r\n        {filteredResults.map((item, index) => (\r\n          <Link to={`/venue/${item.id}`} key={index}>\r\n            <CardItem as={Card}>\r\n              <Typography as=\"h2\" fontSize={18} align=\"center\">\r\n                {item.name}\r\n              </Typography>\r\n              <img src={item.image} alt={item.name} height={200} width={300} />\r\n              <ProgressBar>\r\n                <ProgressBar\r\n                  striped\r\n                  variant={\r\n                    item.score <= 4\r\n                      ? 'success'\r\n                      : item.score <= 7\r\n                      ? 'warning'\r\n                      : 'danger'\r\n                  }\r\n                  now={item.score * 10}\r\n                  key={1}\r\n                />\r\n              </ProgressBar>\r\n              <Typography as=\"h2\" fontSize={24} align=\"center\">\r\n                {`${item.score} / 10`}\r\n              </Typography>\r\n              <IconsList>\r\n                {item.mask ? <Mask /> : null}\r\n                {item.handSanitizer ? <HandSanitizer /> : null}\r\n                {item.alcohol ? <Wine /> : null}\r\n                {item.alcohol ? <Talking /> : null}\r\n                {item.alcohol ? <Singing /> : null}\r\n                {item.alcohol ? <Dancing /> : null}\r\n                {item.capacity <= 3 ? (\r\n                  <SmallSize />\r\n                ) : item.capacity <= 6 ? (\r\n                  <MediumSize />\r\n                ) : (\r\n                  <LargeSize />\r\n                )}\r\n              </IconsList>\r\n            </CardItem>\r\n          </Link>\r\n        ))}\r\n      </Flex>\r\n      {/* </CardWrapper> */}\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\mask.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\handsanitizer.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\helpers\\history.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\reducers\\UserReducer.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\helpers\\setAuthToken.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\helpers\\storage.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Mask.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\hooks\\useUser.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Wine.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\theme\\theme.ts",[],["262","263"],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Safety.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\CovidRates.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Network.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Footer\\styles.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Footer\\index.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Singing.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\SmallSize.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\LargeSize.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\index.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\providers\\UserProvider.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Dancing.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\auth\\components\\shared-style.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Header\\styles.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\HandSanitizer.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\Talking.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\venue\\components\\charts\\index.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\data\\index.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\routes\\Unauthenticated.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\venue\\modules\\venue\\index.js",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\dashboard\\modules\\Dashboard\\index.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\assets\\icons\\MediumSize.tsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\features\\search\\providers\\VenueProvider.jsx",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\ErrorField\\index.ts",[],"C:\\Users\\DELL\\Desktop\\My Self Thaught Career\\WORK\\covidPulse\\src\\ui\\components\\Loading\\styles.ts",[],{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"264","replacedBy":"268"},{"ruleId":"266","replacedBy":"269"},{"ruleId":"264","replacedBy":"270"},{"ruleId":"266","replacedBy":"271"},{"ruleId":"264","replacedBy":"272"},{"ruleId":"266","replacedBy":"273"},{"ruleId":"264","replacedBy":"274"},{"ruleId":"266","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":4,"column":10,"nodeType":"278","messageId":"279","endLine":4,"endColumn":17},{"ruleId":"264","replacedBy":"280"},{"ruleId":"266","replacedBy":"281"},{"ruleId":"264","replacedBy":"282"},{"ruleId":"266","replacedBy":"283"},{"ruleId":"264","replacedBy":"284"},{"ruleId":"266","replacedBy":"285"},{"ruleId":"264","replacedBy":"286"},{"ruleId":"266","replacedBy":"287"},{"ruleId":"276","severity":1,"message":"288","line":6,"column":10,"nodeType":"278","messageId":"279","endLine":6,"endColumn":21},{"ruleId":"264","replacedBy":"289"},{"ruleId":"266","replacedBy":"290"},{"ruleId":"264","replacedBy":"291"},{"ruleId":"266","replacedBy":"292"},{"ruleId":"276","severity":1,"message":"293","line":48,"column":18,"nodeType":"278","messageId":"279","endLine":48,"endColumn":27},{"ruleId":"264","replacedBy":"294"},{"ruleId":"266","replacedBy":"295"},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],["296"],["297"],["296"],["297"],["296"],["297"],["296"],["297"],"@typescript-eslint/no-unused-vars","'API_URL' is defined but never used.","Identifier","unusedVar",["296"],["297"],["296"],["297"],["296"],["297"],["296"],["297"],"'CardWrapper' is defined but never used.",["296"],["297"],["296"],["297"],"'setVenues' is assigned a value but never used.",["296"],["297"],"no-global-assign","no-unsafe-negation"]